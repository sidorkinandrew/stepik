# -*- coding: utf-8 -*-
"""4852-introToDSandML-3.2-all-steps.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IM4SPOM0NfHNjOuAhwSwRMWuy9oxsAWY
"""

import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier

dataset_url = '/content/drive/My Drive/stepic/4852-introToDSandML/heart-disease-uci.zip'
df = pd.read_csv(dataset_url)

y = df.target
X = df.drop('target', axis=1)

np.random.seed(0)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(
                                X, y, test_size=0.33, random_state=0)

X.head()

rf = RandomForestClassifier(10, max_depth=5)

rf.fit(X_train, y_train)

predictions = rf.predict(X_test)

from sklearn.model_selection  import GridSearchCV


parametrs = {'n_estimators':[15], 'max_depth':[5]}
grid_search_cv_rf = GridSearchCV(rf, parametrs, cv=5)
grid_search_cv_rf.fit(X_train, y_train)


best_clf = grid_search_cv_rf.best_estimator_
best_clf.score(X_test, y_test)
feature_importances = best_clf.feature_importances_
feature_importances_df = pd.DataFrame({'features': list(X_train),
                                    'feature_importances': feature_importances})
feature_importances_df = feature_importances_df.sort_values('feature_importances', ascending=False)

print(feature_importances_df.head(5))

imp = pd.DataFrame(rf.feature_importances_, index=X_train.columns, columns=['importance'])
imp.sort_values('importance').plot(kind='barh', figsize=(12, 8))